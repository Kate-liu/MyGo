// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"Code/src/swagger/go-user/models"
)

// GetUserRequestReader is a Reader for the GetUserRequest structure.
type GetUserRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetUserRequestDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetUserRequestOK creates a GetUserRequestOK with default headers values
func NewGetUserRequestOK() *GetUserRequestOK {
	return &GetUserRequestOK{}
}

/* GetUserRequestOK describes a response with status code 200, with default header values.

This text will appear as description of your response body.
*/
type GetUserRequestOK struct {
	Payload *models.User
}

func (o *GetUserRequestOK) Error() string {
	return fmt.Sprintf("[GET /users/{name}][%d] getUserRequestOK  %+v", 200, o.Payload)
}
func (o *GetUserRequestOK) GetPayload() *models.User {
	return o.Payload
}

func (o *GetUserRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserRequestDefault creates a GetUserRequestDefault with default headers values
func NewGetUserRequestDefault(code int) *GetUserRequestDefault {
	return &GetUserRequestDefault{
		_statusCode: code,
	}
}

/* GetUserRequestDefault describes a response with status code -1, with default header values.

This text will appear as description of your error response body.
*/
type GetUserRequestDefault struct {
	_statusCode int

	/* Error code.

	   Format: int64
	*/
	Code int64

	/* Error message.
	 */
	Message string
}

// Code gets the status code for the get user request default response
func (o *GetUserRequestDefault) Code() int {
	return o._statusCode
}

func (o *GetUserRequestDefault) Error() string {
	return fmt.Sprintf("[GET /users/{name}][%d] getUserRequest default ", o._statusCode)
}

func (o *GetUserRequestDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header code
	hdrCode := response.GetHeader("code")

	if hdrCode != "" {
		valcode, err := swag.ConvertInt64(hdrCode)
		if err != nil {
			return errors.InvalidType("code", "header", "int64", hdrCode)
		}
		o.Code = valcode
	}

	// hydrates response header message
	hdrMessage := response.GetHeader("message")

	if hdrMessage != "" {
		o.Message = hdrMessage
	}

	return nil
}
