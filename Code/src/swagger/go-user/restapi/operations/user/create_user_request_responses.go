// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"Code/src/swagger/go-user/models"
)

// CreateUserRequestOKCode is the HTTP code returned for type CreateUserRequestOK
const CreateUserRequestOKCode int = 200

/*CreateUserRequestOK This text will appear as description of your response body.

swagger:response createUserRequestOK
*/
type CreateUserRequestOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewCreateUserRequestOK creates CreateUserRequestOK with default headers values
func NewCreateUserRequestOK() *CreateUserRequestOK {

	return &CreateUserRequestOK{}
}

// WithPayload adds the payload to the create user request o k response
func (o *CreateUserRequestOK) WithPayload(payload *models.User) *CreateUserRequestOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create user request o k response
func (o *CreateUserRequestOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateUserRequestOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateUserRequestDefault This text will appear as description of your error response body.

swagger:response createUserRequestDefault
*/
type CreateUserRequestDefault struct {
	_statusCode int
	/*Error code.

	 */
	Code int64 `json:"code"`
	/*Error message.

	 */
	Message string `json:"message"`
}

// NewCreateUserRequestDefault creates CreateUserRequestDefault with default headers values
func NewCreateUserRequestDefault(code int) *CreateUserRequestDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateUserRequestDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create user request default response
func (o *CreateUserRequestDefault) WithStatusCode(code int) *CreateUserRequestDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create user request default response
func (o *CreateUserRequestDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithCode adds the code to the create user request default response
func (o *CreateUserRequestDefault) WithCode(code int64) *CreateUserRequestDefault {
	o.Code = code
	return o
}

// SetCode sets the code to the create user request default response
func (o *CreateUserRequestDefault) SetCode(code int64) {
	o.Code = code
}

// WithMessage adds the message to the create user request default response
func (o *CreateUserRequestDefault) WithMessage(message string) *CreateUserRequestDefault {
	o.Message = message
	return o
}

// SetMessage sets the message to the create user request default response
func (o *CreateUserRequestDefault) SetMessage(message string) {
	o.Message = message
}

// WriteResponse to the client
func (o *CreateUserRequestDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header code

	code := swag.FormatInt64(o.Code)
	if code != "" {
		rw.Header().Set("code", code)
	}

	// response header message

	message := o.Message
	if message != "" {
		rw.Header().Set("message", message)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
